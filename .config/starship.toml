### GLOBAL SETTINGS ###

[line_break]
disabled = true

### MODULES ##

[username]
style_user = "green bold"
style_root = "red bold"
format = "[$user]($style) "
disabled = false
show_always = false

[hostname]
ssh_only = true
format = 'on [$hostname](bold purple) '
trim_at = "."
disabled = false

[character]
success_symbol = "[➜](bold green)" 
error_symbol = "[✗](bold red)"

# configure directory
[directory]
read_only = " 🔒"
truncation_length = 10
truncate_to_repo = false # truncates directory to root folder if in github repo
#style = "bold italic blue"
style = "bold blue"

[cmd_duration]
min_time = 4
show_milliseconds = false
disabled = true
#style = "bold italic red"
style = "bold red"

[aws]
symbol = "🅰  "

[conda]
symbol = "🅒 "

[dart]
format = 'via [🔰 $version](bold red) '

[docker_context]
symbol = "🐳 "
format = "via [$symbol$context]($style) "
style = "blue bold"
only_with_files = true
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []
disabled = false

[elixir]
symbol = "💧 "

[elm]
format = 'via [🌳 $version](cyan bold) '

[git_branch]
symbol = "🌱 "

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
stashed = "[${count}*](green)" 
modified = "[${count}+](yellow)" 
deleted =  "[${count}-](red)" 
conflicted =  "[${count}~](red)" 
ahead = "⇡${count}"
diverged = '⇕⇡${ahead_count}⇣${behind_count}'
behind = "⇣${count}"
untracked = "[${count}?](blue)" 
staged = "[${count}+](green)"

[git_state]
style =	"bold red"
format = "[$state( $progress_current/$progress_total) ]($style)"
rebase = "rebase"
merge = "merge"	
revert = "revert"	
cherry_pick = "cherry"
bisect = "bisect"	
am = "am"	
am_or_rebase = "am/rebase"

[golang]
symbol = "🐹 "

[hg_branch]
symbol = " "

[java]
symbol = "☕ "

[julia]
symbol = "ஃ "

[haskell]
symbol = "λ "

[memory_usage]
symbol = "🐏 "

[nim]
symbol = "🎣 "

[nix_shell]
symbol = " "

[package]
symbol = "📦 "

[perl]
symbol = "🐪 "

[php]
symbol = "🐘 "

[python]
symbol = "🐍 "
format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"

[ruby]
symbol = "💎 "

[rust]
symbol = "🦀 "

[scala]
symbol = "🆂 "

[shlvl]
symbol = " "

[swift]
symbol = "🐦 "

[nodejs]
format = "via [⬢ Node.js $version](bold green) "
detect_files = ["package.json", ".node-version"]
detect_folders = ["node_modules"]
